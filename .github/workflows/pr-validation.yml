name: PR Validation

on:
  pull_request:
    branches: [master]

env:
  # Use GitHub variables and secrets
  DOCKERFILE_PATH: ${{ vars.DOCKERFILE_PATH }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  test:
    runs-on: [self-hosted, arc-pi]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
        install: true
    
    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and run tests in container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ env.DOCKERFILE_PATH }}
        target: build
        platforms: linux/amd64
        push: false
        build-args: |
          NUGET_FEED_URL=${{ secrets.NUGET_FEED_URL }}
          NUGET_USER=${{ secrets.NUGET_USERNAME }}
          NUGET_PASS=${{ secrets.NUGET_PASSWORD }}
        outputs: type=cacheonly
    
    - name: Run tests
      run: |
        docker run --rm \
          $(docker build -q --target build --platform linux/amd64 .) \
          dotnet test "./UwUConverter.Test/UwUConverter.Tests.csproj" --no-restore --verbosity minimal

  build-validation:
    needs: test
    runs-on: [self-hosted, arc-pi]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
        install: true
    
    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build (validation only - no push)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ env.DOCKERFILE_PATH }}
        platforms: linux/amd64
        push: false
        build-args: |
          NUGET_FEED_URL=${{ secrets.NUGET_FEED_URL }}
          NUGET_USER=${{ secrets.NUGET_USERNAME }}
          NUGET_PASS=${{ secrets.NUGET_PASSWORD }}
        tags: |
          ${{ secrets.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}

  notify-discord:
    if: always()  # Run regardless of previous job status
    needs: [test, build-validation]
    runs-on: [self-hosted, arc-pi]
    
    steps:
    - name: Notify Discord on Success
      if: needs.test.result == 'success' && needs.build-validation.result == 'success'
      run: |
        curl -H "Content-Type: application/json" \
             -d '{
               "embeds": [{
                 "title": "✅ UwU Converter PR Validation Successful",
                 "description": "Pull request validation completed successfully!",
                 "color": 3066993,
                 "fields": [
                   {
                     "name": "Repository",
                     "value": "${{ github.repository }}",
                     "inline": true
                   },
                   {
                     "name": "PR Number",
                     "value": "#${{ github.event.number }}",
                     "inline": true
                   },
                   {
                     "name": "PR Title",
                     "value": "${{ github.event.pull_request.title }}",
                     "inline": false
                   },
                   {
                     "name": "Author",
                     "value": "${{ github.event.pull_request.user.login }}",
                     "inline": true
                   }
                 ],
                 "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
               }]
             }' \
             "${{ secrets.DISCORD_BUILD_NOTIFY_WEBHOOK }}"
    
    - name: Notify Discord on Failure
      if: needs.test.result == 'failure' || needs.build-validation.result == 'failure'
      run: |
        curl -H "Content-Type: application/json" \
             -d '{
               "embeds": [{
                 "title": "❌ UwU Converter PR Validation Failed",
                 "description": "Pull request validation failed!",
                 "color": 15158332,
                 "fields": [
                   {
                     "name": "Repository",
                     "value": "${{ github.repository }}",
                     "inline": true
                   },
                   {
                     "name": "PR Number",
                     "value": "#${{ github.event.number }}",
                     "inline": true
                   },
                   {
                     "name": "PR Title",
                     "value": "${{ github.event.pull_request.title }}",
                     "inline": false
                   },
                   {
                     "name": "Author",
                     "value": "${{ github.event.pull_request.user.login }}",
                     "inline": true
                   },
                   {
                     "name": "Failed Jobs",
                     "value": "Test: ${{ needs.test.result }}\nBuild: ${{ needs.build-validation.result }}",
                     "inline": false
                   },
                   {
                     "name": "Action URL",
                     "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                     "inline": false
                   }
                 ],
                 "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
               }]
             }' \
             "${{ secrets.DISCORD_BUILD_NOTIFY_WEBHOOK }}"
